/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.0'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation 'org.apache.logging.log4j:log4j-core:2.24.2'
    implementation 'org.apache.logging.log4j:log4j-api:2.23.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.20.0'
    // https://mvnrepository.com/artifact/org.apache.poi/poi
    implementation 'org.apache.poi:poi:5.3.0'

    implementation 'org.apache.poi:poi-scratchpad:5.2.5'

    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    implementation 'org.apache.poi:poi-ooxml:5.3.0'
    implementation 'org.apache.poi:poi-ooxml-full:5.3.0'

    implementation 'org.apache.poi:poi-ooxml-schemas:4.1.2'

    // https://mvnrepository.com/artifact/org.imgscalr/imgscalr-lib
    implementation 'org.imgscalr:imgscalr-lib:4.2'



    implementation 'commons-io:commons-io:2.18.0'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(18)
    }
}

jar {
    archiveBaseName = 'thumbgen'
//    manifest {
//        attributes(
//                'Main-Class': 'org.thumbgen.ThumbGen'
//        )
//    }
}
application {
    // Define the main class for the application.
    mainClass = 'org.thumbgen.ThumbGen'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.register('uberJar', Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//
    manifest {
        attributes(
                'Main-Class': 'org.thumbgen.ThumbGen'
        )
    }

    archiveBaseName = 'thumbgen'
//    archiveClassifier = 'thumbgen'

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}
